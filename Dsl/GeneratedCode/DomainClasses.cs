//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass Tapiz
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Tapiz.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Tapiz.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("771f4483-dc3d-49c4-88b5-724f8fe873ae")]
	public partial class Tapiz : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Tapiz domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x771f4483, 0xdc3d, 0x49c4, 0x88, 0xb5, 0x72, 0x4f, 0x8f, 0xe8, 0x73, 0xae);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombreSolucion domain property code
		
		/// <summary>
		/// nombreSolucion domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreSolucionDomainPropertyId = new global::System.Guid(0xd620de4d, 0x5b6c, 0x4e15, 0xa1, 0x0c, 0x41, 0x5e, 0x09, 0x33, 0x51, 0xbd);
		
		/// <summary>
		/// Storage for nombreSolucion
		/// </summary>
		private global::System.String nombreSolucionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombreSolucion domain property.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Tapiz.Nombre Solucion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Tapiz/nombreSolucion.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Tapiz/nombreSolucion.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d620de4d-5b6c-4e15-a10c-415e093351bd")]
		public global::System.String nombreSolucion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreSolucionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombreSolucionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Tapiz.nombreSolucion domain property.
		/// </summary>
		internal sealed partial class nombreSolucionPropertyHandler : DslModeling::DomainPropertyValueHandler<Tapiz, global::System.String>
		{
			private nombreSolucionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Tapiz.nombreSolucion domain property value handler.
			/// </summary>
			public static readonly nombreSolucionPropertyHandler Instance = new nombreSolucionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Tapiz.nombreSolucion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreSolucionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Tapiz element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreSolucionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Tapiz element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreSolucionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clases opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clases.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClasePadre> Clases
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClasePadre>, ClasePadre>(global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.TapizDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre sourceClasePadre1 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre;
			if (sourceClasePadre1 != null)
			{
				// Create link for path TapizHasClases.Clases
				this.Clases.Add(sourceClasePadre1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre sourceClasePadre1 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre;
			if (sourceClasePadre1 != null)
			{
				// Delete link for path TapizHasClases.Clases
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.GetLinks((global::UPM_IPS.PLFLARCCAYRClassWeb.Tapiz)this, sourceClasePadre1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.TapizDomainRoleId, global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.ClasePadreDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass Elemento
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Elemento
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("dd3ddda3-ecd0-4c39-8d99-146c19b24d7a")]
	public partial class Elemento : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Elemento domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdd3ddda3, 0xecd0, 0x4c39, 0x8d, 0x99, 0x14, 0x6c, 0x19, 0xb2, 0x4d, 0x7a);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Elemento(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Elemento(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0x29863726, 0x28fa, 0x471c, 0xa5, 0xbd, 0x4b, 0x5f, 0xfb, 0x5c, 0x9a, 0xf0);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Elemento.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento/nombre.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento/nombre.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("29863726-28fa-471c-a5bd-4b5ffb5c9af0")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Elemento.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Elemento, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Elemento.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Elemento.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Elemento element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Elemento element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region tipoDato domain property code
		
		/// <summary>
		/// tipoDato domain property Id.
		/// </summary>
		public static readonly global::System.Guid tipoDatoDomainPropertyId = new global::System.Guid(0x485133f5, 0x5223, 0x4cf8, 0xb9, 0x46, 0x09, 0x75, 0xc8, 0x72, 0x43, 0xee);
		
		/// <summary>
		/// Storage for tipoDato
		/// </summary>
		private TipoDato tipoDatoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of tipoDato domain property.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Elemento.Tipo Dato
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento/tipoDato.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento/tipoDato.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("485133f5-5223-4cf8-b946-0975c87243ee")]
		public TipoDato tipoDato
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tipoDatoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Elemento.tipoDato domain property.
		/// </summary>
		internal sealed partial class tipoDatoPropertyHandler : DslModeling::DomainPropertyValueHandler<Elemento, TipoDato>
		{
			private tipoDatoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Elemento.tipoDato domain property value handler.
			/// </summary>
			public static readonly tipoDatoPropertyHandler Instance = new tipoDatoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Elemento.tipoDato domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tipoDatoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoDato GetValue(Elemento element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Elemento element, TipoDato newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoDato oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region nombreTipoCalculada domain property code
		
		/// <summary>
		/// nombreTipoCalculada domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreTipoCalculadaDomainPropertyId = new global::System.Guid(0x8025a992, 0xbe47, 0x444d, 0x97, 0x59, 0x11, 0xff, 0x64, 0x97, 0xa1, 0x80);
		
		/// <summary>
		/// Gets or sets the value of nombreTipoCalculada domain property.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Elemento.Nombre Tipo Calculada
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento/nombreTipoCalculada.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Elemento/nombreTipoCalculada.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("8025a992-be47-444d-9759-11ff6497a180")]
		public global::System.String nombreTipoCalculada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreTipoCalculadaPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Elemento.nombreTipoCalculada domain property.
		/// </summary>
		internal sealed partial class nombreTipoCalculadaPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Elemento, global::System.String>
		{
			private nombreTipoCalculadaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Elemento.nombreTipoCalculada domain property value handler.
			/// </summary>
			public static readonly nombreTipoCalculadaPropertyHandler Instance = new nombreTipoCalculadaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Elemento.nombreTipoCalculada domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreTipoCalculadaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Elemento element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for nombreTipoCalculada because its Kind is
				// set to Calculated. Please provide the GetnombreTipoCalculadaValue()
				// method on the domain class.
				return element.GetnombreTipoCalculadaValue();
			}
		
		}
		
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass ClasePadre
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("bb1a8246-8c36-49b4-96d6-7c79244eaeba")]
	public partial class ClasePadre : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClasePadre domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xbb1a8246, 0x8c36, 0x49b4, 0x96, 0xd6, 0x7c, 0x79, 0x24, 0x4e, 0xae, 0xba);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClasePadre(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClasePadre(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xdd35a559, 0x221c, 0x4e8d, 0xa6, 0x65, 0xbf, 0x1e, 0xcb, 0x08, 0x8b, 0x2f);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre/nombre.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre/nombre.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("dd35a559-221c-4e8d-a665-bf1ecb088b2f")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClasePadre.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<ClasePadre, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClasePadre.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClasePadre.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClasePadre element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClasePadre element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region id domain property code
		
		/// <summary>
		/// id domain property Id.
		/// </summary>
		public static readonly global::System.Guid idDomainPropertyId = new global::System.Guid(0xcaf5e179, 0x6e63, 0x400e, 0x86, 0x8c, 0x1e, 0x6e, 0x53, 0x83, 0xb6, 0x56);
		
		/// <summary>
		/// Storage for id
		/// </summary>
		private global::System.String idPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of id domain property.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre.Id
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre/id.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre/id.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("caf5e179-6e63-400e-868c-1e6e5383b656")]
		public global::System.String id
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return idPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				idPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ClasePadre.id domain property.
		/// </summary>
		internal sealed partial class idPropertyHandler : DslModeling::DomainPropertyValueHandler<ClasePadre, global::System.String>
		{
			private idPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClasePadre.id domain property value handler.
			/// </summary>
			public static readonly idPropertyHandler Instance = new idPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClasePadre.id domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return idDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClasePadre element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.idPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ClasePadre element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.idPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.ClasePadre
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.ClasePadreDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.ClasePadreDomainRoleId, value);
			}
		}
		#endregion
		#region Atributo opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Atributo.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.ClasePadre
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Atributo> Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.ClasePadreDomainRoleId);
			}
		}
		#endregion
		#region Operacioned opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Operacioned.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.ClasePadre
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Operacion> Operacioned
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Operacion>, Operacion>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.ClasePadreDomainRoleId);
			}
		}
		#endregion
		#region ClaseHija opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseHija.
		/// Description for
		/// UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseHija.ClasePadre
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClaseHija> ClaseHija
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClaseHija>, ClaseHija>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseHija.ClasePadreDomainRoleId);
			}
		}
		#endregion
		#region TargetClasePadre opposite domain role accessor
		
		/// <summary>
		/// Gets a list of TargetClasePadre.
		/// Description for
		/// UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesTargetClasePadre.SourceClasePadre
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClasePadre> TargetClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClasePadre>, ClasePadre>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesTargetClasePadre.SourceClasePadreDomainRoleId);
			}
		}
		#endregion
		#region SourceClasePadre opposite domain role accessor
		
		/// <summary>
		/// Gets a list of SourceClasePadre.
		/// Description for
		/// UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesTargetClasePadre.TargetClasePadre
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClasePadre> SourceClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClasePadre>, ClasePadre>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesTargetClasePadre.TargetClasePadreDomainRoleId);
			}
		}
		#endregion
		#region ClaseAgregacion opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAgregacion.
		/// Description for
		/// UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseAgregacion.ClasePadre
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClaseAgregacion> ClaseAgregacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClaseAgregacion>, ClaseAgregacion>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseAgregacion.ClasePadreDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo;
			if (sourceAtributo1 != null)
			{
				// Create link for path ClasePadreHasAtributo.Atributo
				this.Atributo.Add(sourceAtributo1);

				return;
			}
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion sourceOperacion2 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion;
			if (sourceOperacion2 != null)
			{
				// Create link for path ClasePadreHasOperacioned.Operacioned
				this.Operacioned.Add(sourceOperacion2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo;
			if (sourceAtributo1 != null)
			{
				// Delete link for path ClasePadreHasAtributo.Atributo
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.GetLinks((global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre)this, sourceAtributo1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.ClasePadreDomainRoleId, global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.AtributoDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion sourceOperacion2 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion;
			if (sourceOperacion2 != null)
			{
				// Delete link for path ClasePadreHasOperacioned.Operacioned
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.GetLinks((global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadre)this, sourceOperacion2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.ClasePadreDomainRoleId, global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.OperacionDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass Atributo
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Atributo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Atributo.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Atributo.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("fce932bb-16b2-47ba-bffd-a3b9fa6a9b2b")]
	public partial class Atributo : Elemento
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Atributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xfce932bb, 0x16b2, 0x47ba, 0xbf, 0xfd, 0xa3, 0xb9, 0xfa, 0x6a, 0x9b, 0x2b);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ClasePadre opposite domain role accessor
		/// <summary>
		/// Gets or sets ClasePadre.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.Atributo
		/// </summary>
		public virtual ClasePadre ClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.AtributoDomainRoleId) as ClasePadre;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasAtributo.AtributoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass Operacion
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Operacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Operacion.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Operacion.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("2aa3a50f-d907-40d1-b430-e42e9312f2b6")]
	public partial class Operacion : Elemento
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Operacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2aa3a50f, 0xd907, 0x40d1, 0xb4, 0x30, 0xe4, 0x2e, 0x93, 0x12, 0xf2, 0xb6);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Operacion(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Operacion(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ClasePadre opposite domain role accessor
		/// <summary>
		/// Gets or sets ClasePadre.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.Operacion
		/// </summary>
		public virtual ClasePadre ClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.OperacionDomainRoleId) as ClasePadre;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreHasOperacioned.OperacionDomainRoleId, value);
			}
		}
		#endregion
		#region Parametro opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Parametro.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.Operacion
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Parametros> Parametro
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Parametros>, Parametros>(global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.OperacionDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros sourceParametros1 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros;
			if (sourceParametros1 != null)
			{
				// Create link for path OperacionHasParametro.Parametro
				this.Parametro.Add(sourceParametros1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros sourceParametros1 = sourceElement as global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros;
			if (sourceParametros1 != null)
			{
				// Delete link for path OperacionHasParametro.Parametro
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.GetLinks((global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion)this, sourceParametros1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.OperacionDomainRoleId, global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.ParametrosDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass Parametros
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.Parametros
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.Parametros.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.Parametros.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("192143cd-a717-47e9-83cf-e1fd0f341de9")]
	public partial class Parametros : Elemento
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Parametros domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x192143cd, 0xa717, 0x47e9, 0x83, 0xcf, 0xe1, 0xfd, 0x0f, 0x34, 0x1d, 0xe9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametros(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametros(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Operacion opposite domain role accessor
		/// <summary>
		/// Gets or sets Operacion.
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.Parametros
		/// </summary>
		public virtual Operacion Operacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.ParametrosDomainRoleId) as Operacion;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.ParametrosDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass ClaseHija
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseHija
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHija.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHija.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("56b44783-6940-4ca3-aeaf-8e86d75d0136")]
	public partial class ClaseHija : ClasePadre
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseHija domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x56b44783, 0x6940, 0x4ca3, 0xae, 0xaf, 0x8e, 0x86, 0xd7, 0x5d, 0x01, 0x36);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseHija(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseHija(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ClasePadre opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClasePadre.
		/// Description for
		/// UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseHija.ClaseHija
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClasePadre> ClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClasePadre>, ClasePadre>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseHija.ClaseHijaDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainClass ClaseAgregacion
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseAgregacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseAgregacion.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseAgregacion.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("af41baeb-fb53-48f2-8922-cc843632e699")]
	public partial class ClaseAgregacion : ClasePadre
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseAgregacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xaf41baeb, 0xfb53, 0x48f2, 0x89, 0x22, 0xcc, 0x84, 0x36, 0x32, 0xe6, 0x99);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAgregacion(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseAgregacion(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ClasePadre opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClasePadre.
		/// Description for
		/// UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseAgregacion.ClaseAgregacion
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<ClasePadre> ClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<ClasePadre>, ClasePadre>(global::UPM_IPS.PLFLARCCAYRClassWeb.ClasePadreReferencesClaseAgregacion.ClaseAgregacionDomainRoleId);
			}
		}
		#endregion
	}
}
