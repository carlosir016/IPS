//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainRelationship TapizHasClases
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("26121035-877c-4adf-95cb-02590d87a626")]
	public partial class TapizHasClases : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasClases domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x26121035, 0x877c, 0x4adf, 0x95, 0xcb, 0x02, 0x59, 0x0d, 0x87, 0xa6, 0x26);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasClases link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">Clase to use as the target of the relationship.</param>
		public TapizHasClases(Tapiz source, Clase target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasClases.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasClases.ClaseDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasClases(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasClases(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasClases(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasClases(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0x063ba5cd, 0x0c13, 0x4ae8, 0x96, 0x1e, 0x20, 0x79, 0xe5, 0xea, 0xdd, 0xb2);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases/Tapiz.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases/Tapiz.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Clases", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("063ba5cd-0c13-4ae8-961e-2079e5eaddb2")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a Clase
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(Clase element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClaseDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(Clase element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClaseDomainRoleId, newTapiz);
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x01613520, 0xbd70, 0x47a1, 0xa3, 0xec, 0xf9, 0xe5, 0x49, 0xd3, 0x81, 0xc1);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases/Clase.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases/Clase.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases/Clase.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("01613520-bd70-47a1-a3ec-f9e549d381c1")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clases of a Tapiz
		/// <summary>
		/// Gets a list of Clases.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Clase> GetClases(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasClases links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases> GetLinksToClases ( global::UPM_IPS.PLFLARCCAYRClassWeb.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases>(tapizInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.TapizDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the TapizHasClases link to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases GetLinkToTapiz (global::UPM_IPS.PLFLARCCAYRClassWeb.Clase claseInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases>(claseInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.ClaseDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Clase not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasClases instance accessors
		
		/// <summary>
		/// Get any TapizHasClases links between a given Tapiz and a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases> GetLinks( global::UPM_IPS.PLFLARCCAYRClassWeb.Tapiz source, global::UPM_IPS.PLFLARCCAYRClassWeb.Clase target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases>();
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.TapizDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasClases link between a given Tapizand a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases GetLink( global::UPM_IPS.PLFLARCCAYRClassWeb.Tapiz source, global::UPM_IPS.PLFLARCCAYRClassWeb.Clase target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases.TapizDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.TapizHasClases link in links )
			{
				if ( target.Equals(link.Clase) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainRelationship ClaseHasAtributo
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("7f86b8f2-d708-4e2c-a259-a908feed5230")]
	public partial class ClaseHasAtributo : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseHasAtributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7f86b8f2, 0xd708, 0x4e2c, 0xa2, 0x59, 0xa9, 0x08, 0xfe, 0xed, 0x52, 0x30);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseHasAtributo link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Atributo to use as the target of the relationship.</param>
		public ClaseHasAtributo(Clase source, Atributo target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseHasAtributo.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseHasAtributo.AtributoDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasAtributo(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasAtributo(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasAtributo(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasAtributo(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x154e9a90, 0x390f, 0x4026, 0x97, 0x66, 0x68, 0x7d, 0x15, 0xc8, 0xe9, 0x8d);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo/Clase.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo/Clase.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Atributo", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("154e9a90-390f-4026-9766-687d15c8e98d")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a Atributo
		/// <summary>
		/// Gets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Clase GetClase(Atributo element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, AtributoDomainRoleId) as Clase;
		}
		
		/// <summary>
		/// Sets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClase(Atributo element, Clase newClase)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, AtributoDomainRoleId, newClase);
		}
		#endregion
		#region Atributo domain role code
		
		/// <summary>
		/// Atributo domain role Id.
		/// </summary>
		public static readonly global::System.Guid AtributoDomainRoleId = new global::System.Guid(0x5e789619, 0xde4e, 0x4d8a, 0x95, 0xa1, 0x60, 0x35, 0xaf, 0xc5, 0xd5, 0x25);
		
		/// <summary>
		/// DomainRole Atributo
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.Atributo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo/Atributo.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo/Atributo.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo/Atributo.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("5e789619-de4e-4d8a-95a1-6035afc5d525")]
		public virtual Atributo Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Atributo)DslModeling::DomainRoleInfo.GetRolePlayer(this, AtributoDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AtributoDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Atributo of a Clase
		/// <summary>
		/// Gets a list of Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Atributo> GetAtributo(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseHasAtributo links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo> GetLinksToAtributo ( global::UPM_IPS.PLFLARCCAYRClassWeb.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo>(claseInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.ClaseDomainRoleId);
		}
		#endregion
		#region Atributo link accessor
		/// <summary>
		/// Get the ClaseHasAtributo link to a Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo GetLinkToClase (global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo atributoInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo>(atributoInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.AtributoDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Atributo not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseHasAtributo instance accessors
		
		/// <summary>
		/// Get any ClaseHasAtributo links between a given Clase and a Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo> GetLinks( global::UPM_IPS.PLFLARCCAYRClassWeb.Clase source, global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo>();
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo link in links )
			{
				if ( target.Equals(link.Atributo) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseHasAtributo link between a given Claseand a Atributo.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo GetLink( global::UPM_IPS.PLFLARCCAYRClassWeb.Clase source, global::UPM_IPS.PLFLARCCAYRClassWeb.Atributo target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasAtributo link in links )
			{
				if ( target.Equals(link.Atributo) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainRelationship ClaseHasOperacioned
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("71f3866f-76f4-43b4-b07a-d551efaeff5d")]
	public partial class ClaseHasOperacioned : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// ClaseHasOperacioned domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x71f3866f, 0x76f4, 0x43b4, 0xb0, 0x7a, 0xd5, 0x51, 0xef, 0xae, 0xff, 0x5d);
	
				
		/// <summary>
		/// Constructor
		/// Creates a ClaseHasOperacioned link in the same Partition as the given Clase
		/// </summary>
		/// <param name="source">Clase to use as the source of the relationship.</param>
		/// <param name="target">Operacion to use as the target of the relationship.</param>
		public ClaseHasOperacioned(Clase source, Operacion target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(ClaseHasOperacioned.ClaseDomainRoleId, source), new DslModeling::RoleAssignment(ClaseHasOperacioned.OperacionDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasOperacioned(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasOperacioned(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public ClaseHasOperacioned(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public ClaseHasOperacioned(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Clase domain role code
		
		/// <summary>
		/// Clase domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClaseDomainRoleId = new global::System.Guid(0x06dca603, 0x956b, 0x49dc, 0xad, 0xcd, 0x84, 0x82, 0xdc, 0xd9, 0xe7, 0xf4);
		
		/// <summary>
		/// DomainRole Clase
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned/Clase.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned/Clase.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Operacioned", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned/Clase.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("06dca603-956b-49dc-adcd-8482dcd9e7f4")]
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Clase)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClaseDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClaseDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Clase of a Operacion
		/// <summary>
		/// Gets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Clase GetClase(Operacion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, OperacionDomainRoleId) as Clase;
		}
		
		/// <summary>
		/// Sets Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClase(Operacion element, Clase newClase)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, OperacionDomainRoleId, newClase);
		}
		#endregion
		#region Operacion domain role code
		
		/// <summary>
		/// Operacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid OperacionDomainRoleId = new global::System.Guid(0xbbc457e4, 0x8502, 0x4d72, 0x80, 0xa4, 0xb4, 0x51, 0xab, 0x11, 0x70, 0xea);
		
		/// <summary>
		/// DomainRole Operacion
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.Operacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned/Operacion.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned/Operacion.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Clase", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned/Operacion.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("bbc457e4-8502-4d72-80a4-b451ab1170ea")]
		public virtual Operacion Operacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Operacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, OperacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, OperacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Operacioned of a Clase
		/// <summary>
		/// Gets a list of Operacioned.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Operacion> GetOperacioned(Clase element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Operacion>, Operacion>(element, ClaseDomainRoleId);
		}
		#endregion
		#region Clase link accessor
		/// <summary>
		/// Get the list of ClaseHasOperacioned links to a Clase.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned> GetLinksToOperacioned ( global::UPM_IPS.PLFLARCCAYRClassWeb.Clase claseInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned>(claseInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.ClaseDomainRoleId);
		}
		#endregion
		#region Operacion link accessor
		/// <summary>
		/// Get the ClaseHasOperacioned link to a Operacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned GetLinkToClase (global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion operacionInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned>(operacionInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.OperacionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Operacion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClaseHasOperacioned instance accessors
		
		/// <summary>
		/// Get any ClaseHasOperacioned links between a given Clase and a Operacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned> GetLinks( global::UPM_IPS.PLFLARCCAYRClassWeb.Clase source, global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned>();
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned link in links )
			{
				if ( target.Equals(link.Operacion) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one ClaseHasOperacioned link between a given Claseand a Operacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned GetLink( global::UPM_IPS.PLFLARCCAYRClassWeb.Clase source, global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned.ClaseDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.ClaseHasOperacioned link in links )
			{
				if ( target.Equals(link.Operacion) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.PLFLARCCAYRClassWeb
{
	/// <summary>
	/// DomainRelationship OperacionHasParametro
	/// Description for UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("24b1bfff-a221-46f5-bb4c-7c8378809b07")]
	public partial class OperacionHasParametro : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// OperacionHasParametro domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x24b1bfff, 0xa221, 0x46f5, 0xbb, 0x4c, 0x7c, 0x83, 0x78, 0x80, 0x9b, 0x07);
	
				
		/// <summary>
		/// Constructor
		/// Creates a OperacionHasParametro link in the same Partition as the given Operacion
		/// </summary>
		/// <param name="source">Operacion to use as the source of the relationship.</param>
		/// <param name="target">Parametros to use as the target of the relationship.</param>
		public OperacionHasParametro(Operacion source, Parametros target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(OperacionHasParametro.OperacionDomainRoleId, source), new DslModeling::RoleAssignment(OperacionHasParametro.ParametrosDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public OperacionHasParametro(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public OperacionHasParametro(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public OperacionHasParametro(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public OperacionHasParametro(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Operacion domain role code
		
		/// <summary>
		/// Operacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid OperacionDomainRoleId = new global::System.Guid(0x19c1a29e, 0x11bc, 0x40dd, 0x98, 0x3d, 0x7c, 0x11, 0x7b, 0x07, 0x84, 0x8b);
		
		/// <summary>
		/// DomainRole Operacion
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.Operacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro/Operacion.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro/Operacion.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Parametro", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro/Operacion.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("19c1a29e-11bc-40dd-983d-7c117b07848b")]
		public virtual Operacion Operacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Operacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, OperacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, OperacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Operacion of a Parametros
		/// <summary>
		/// Gets Operacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Operacion GetOperacion(Parametros element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ParametrosDomainRoleId) as Operacion;
		}
		
		/// <summary>
		/// Sets Operacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetOperacion(Parametros element, Operacion newOperacion)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ParametrosDomainRoleId, newOperacion);
		}
		#endregion
		#region Parametros domain role code
		
		/// <summary>
		/// Parametros domain role Id.
		/// </summary>
		public static readonly global::System.Guid ParametrosDomainRoleId = new global::System.Guid(0x3538d235, 0xc83a, 0x4906, 0xb4, 0x3d, 0x59, 0x75, 0x64, 0x64, 0x7f, 0xa0);
		
		/// <summary>
		/// DomainRole Parametros
		/// Description for UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.Parametros
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro/Parametros.DisplayName", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro/Parametros.Description", typeof(global::UPM_IPS.PLFLARCCAYRClassWeb.PLFLARCCAYRClassWebDomainModel), "UPM_IPS.PLFLARCCAYRClassWeb.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Operacion", PropertyDisplayNameKey="UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro/Parametros.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("3538d235-c83a-4906-b43d-597564647fa0")]
		public virtual Parametros Parametros
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Parametros)DslModeling::DomainRoleInfo.GetRolePlayer(this, ParametrosDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ParametrosDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Parametro of a Operacion
		/// <summary>
		/// Gets a list of Parametro.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Parametros> GetParametro(Operacion element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Parametros>, Parametros>(element, OperacionDomainRoleId);
		}
		#endregion
		#region Operacion link accessor
		/// <summary>
		/// Get the list of OperacionHasParametro links to a Operacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro> GetLinksToParametro ( global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion operacionInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro>(operacionInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.OperacionDomainRoleId);
		}
		#endregion
		#region Parametros link accessor
		/// <summary>
		/// Get the OperacionHasParametro link to a Parametros.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro GetLinkToOperacion (global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros parametrosInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro>(parametrosInstance, global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.ParametrosDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Parametros not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region OperacionHasParametro instance accessors
		
		/// <summary>
		/// Get any OperacionHasParametro links between a given Operacion and a Parametros.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro> GetLinks( global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion source, global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro>();
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.OperacionDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro link in links )
			{
				if ( target.Equals(link.Parametros) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one OperacionHasParametro link between a given Operacionand a Parametros.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro GetLink( global::UPM_IPS.PLFLARCCAYRClassWeb.Operacion source, global::UPM_IPS.PLFLARCCAYRClassWeb.Parametros target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro>(source, global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro.OperacionDomainRoleId);
			foreach ( global::UPM_IPS.PLFLARCCAYRClassWeb.OperacionHasParametro link in links )
			{
				if ( target.Equals(link.Parametros) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
